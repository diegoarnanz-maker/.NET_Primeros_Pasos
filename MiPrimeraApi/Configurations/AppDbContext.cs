using Microsoft.EntityFrameworkCore; // Similar a javax.persistence o Spring Data
using MiPrimeraApi.Models;           // Como importar tus entidades

namespace MiPrimeraApi.Configurations // Como tu paquete config en Spring Boot
{
    // ðŸ”¹ Esta clase es como tu EntityManager + JpaConfig en Java
    public class AppDbContext : DbContext
    {
        // ðŸ”¸ Constructor con configuraciÃ³n de conexiÃ³n (como DataSource + JPAProperties)
        public AppDbContext(DbContextOptions<AppDbContext> options) : base(options) { }

        // ðŸ”¹ Esto mapea la entidad Empleado como una tabla
        public DbSet<Empleado> Empleados { get; set; }
        // Equivale a @Entity + @Table(name = "Empleados") en Java

        // ðŸ”¸ MÃ©todo para configurar detalles del mapeo (como @Column en Java)
        // AquÃ­ puedes indicar que "Salario" es decimal(10,2) en SQL Server
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            // ðŸ”¹ Equivalente a: @Column(precision = 10, scale = 2) en Spring Boot
            modelBuilder.Entity<Empleado>()
                .Property(e => e.Salario)
                .HasPrecision(10, 2);

            // ðŸ”¸ AquÃ­ podrÃ­as seguir aÃ±adiendo configuraciones para otras entidades
            // modelBuilder.Entity<Categoria>()...
        }
    }
}
